using System;

class KT
{
    static int bs = 8;
    static int[,] cb = new int[bs, bs];
    static int[] mr = { 2, 1, -1, -2, -2, -1, 1, 2 };
    static int[] mc = { 1, 2, 2, 1, -1, -2, -2, -1 };

    static bool IM(int r, int c)
    {
        return r >= 0 && r < bs && c >= 0 && c < bs && cb[r, c] == 0;
    }

    static int CM(int r, int c)
    {
        int ct = 0;
        for (int i = 0; i < 8; i++)
        {
            int nr = r + mr[i];
            int nc = c + mc[i];
            if (IM(nr, nc))
                ct++;
        }
        return ct;
    }

    static void KTH()
    {
        int cr = 0;
        int cc = 0;
        cb[cr, cc] = 1;

        for (int mn = 2; mn <= bs * bs; mn++)
        {
            int mm = int.MaxValue;
            int nr = -1, nc = -1;

            for (int i = 0; i < 8; i++)
            {
                int tr = cr + mr[i];
                int tc = cc + mc[i];

                if (IM(tr, tc))
                {
                    int cm = CM(tr, tc);
                    if (cm < mm)
                    {
                        mm = cm;
                        nr = tr;
                        nc = tc;
                    }
                }
            }

            if (nr == -1 || nc == -1)
            {
                Console.WriteLine("NSF!");
                break;
            }

            cb[nr, nc] = mn;
            cr = nr;
            cc = nc;

            Console.WriteLine($"Move: {mn}");
            DC();
            Console.WriteLine();
            Console.WriteLine("Press any key to continue to the next move...");
            Console.ReadKey();
        }
    }

    static void DC()
    {
        for (int i = 0; i < bs; i++)
        {
            for (int j = 0; j < bs; j++)
            {
                Console.Write($"{cb[i, j],-3} ");
            }
            Console.WriteLine();
        }
        Console.WriteLine();
    }

    static void Main()
    {
        Console.WriteLine("KT with HM");
        Console.WriteLine("IC:");

        KTH();
    }
}
